#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sys
import argparse
import json
import importlib.util
import inspect

parser = argparse.ArgumentParser(description='Render asterix specs from json format, using provided script.')
parser.add_argument('--script', required=True, nargs=2,
    metavar=('filename', 'func'), help='rendering script')
parser.add_argument('infile', nargs='?', type=argparse.FileType('r'), default=sys.stdin)
parser.add_argument('outfile', nargs='?', type=argparse.FileType('w'), default=sys.stdout)

args = parser.parse_args()

# import custom script
module_name = 'custom'
(filename, funcname) = args.script
spec = importlib.util.spec_from_file_location(module_name, filename)
module = importlib.util.module_from_spec(spec)
spec.loader.exec_module(module)
func = module.__dict__[funcname]

# load input file and decode from json
obj = json.loads(args.infile.read())

# render with provided function, if it's a class, make an instance first.
if inspect.isclass(func):
    func = func()
result = func(obj)
args.outfile.write(result)

